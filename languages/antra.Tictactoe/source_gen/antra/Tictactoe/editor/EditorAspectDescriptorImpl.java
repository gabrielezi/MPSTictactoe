package antra.Tictactoe.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import jetbrains.mps.openapi.editor.descriptor.NamedMenuId;
import java.util.Arrays;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Board_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new CommandList_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new EmptyLine_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new GameEnded_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new IfStatement_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Move_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Not_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Player_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new While_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new isTaken_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredNamedTransformationMenus(NamedMenuId menuId) {
    SAbstractConcept cncpt = (SAbstractConcept) menuId.getConcept();
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a1a3, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new IfElse()});
            case 1:
              return Arrays.asList(new TransformationMenu[]{new IfElse_ext_1()});
            default:
          }
        }
        break;
      case 1:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0b1a3, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new NegateAndAlter()});
            default:
          }
        }
        break;
      case 2:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0c1a3, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new While_to_if()});
            default:
          }
        }
        break;
      default:
    }

    return Collections.<TransformationMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x44f073d544acf79aL), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x3dd25694a8251fb1L), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x1b403d9cecdc9380L), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x1b403d9cecea9666L), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x3022a9353516e2fL), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x3dd25694a8252b4bL), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x1b403d9cece78fccL), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x27111abcbb8099afL), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x1b403d9cecd851c4L), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x1b403d9cecd1ae8eL)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x3022a9353516e2fL), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x1b403d9cece78fcdL), MetaIdFactory.conceptId(0xf1d2a8d3b5f04e2aL, 0x8d81e507cb139506L, 0x1b403d9cecd851c4L)).seal();
  private static final String[] stringSwitchCases_xbvbvu_a0a0a0a1a3 = new String[]{"antra.Tictactoe.editor.IfElse", "antra.Tictactoe.editor.IfElse_ext_1"};
  private static final String[] stringSwitchCases_xbvbvu_a0a0a0b1a3 = new String[]{"antra.Tictactoe.editor.NegateAndAlter"};
  private static final String[] stringSwitchCases_xbvbvu_a0a0a0c1a3 = new String[]{"antra.Tictactoe.editor.While_to_if"};
}
